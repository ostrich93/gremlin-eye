AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ProjectName:
    Type: String
    Default: gremlin-eye
  RDSMasterUsername:
    Type: String
  RDSPassword:
    Type: String
  DBName:
    Type: String
    Default: GremlinDB

Resources:
  DBCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "/${ProjectName}/DB_CREDENTIALS"
      GenerateSecretString:
        PasswordLength: 16
        ExcludeCharacters: '"@/\\$()[]=;|&"'
        SecretStringTemplate: !Sub |
          {
            "username": "${RDSMasterUsername}"
          }
        GenerateStringKey: "password"
  DBConnectionString:
    Type: AWS::SecretsManager::Secret
    DependsOn: RDSInstance
    Properties:
      Name: !Sub "/${ProjectName}/DB_CONNECTION_STRING"
      SecretString: !Join ["",
        [
          "Server=", !Join ["", [!GetAtt RDSInstance.Endpoint.Address, ""] ],
          ",", !GetAtt RDSInstance.Endpoint.Port,
          ";Database=", !Join ["", [!Ref DBName, ""] ],
          ";TrustedConnection=False;TrustServerCertificate=True;User Id=", !Join ["", [!Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:username}}", ""] ],
          ";Password=", !Join ["", [!Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:password}}", ""] ],
          ";ConnectionTimeout=120;MultipleActiveResultsSets=True;"
        ]
      ]
      
  RDSInstance:
    Type: AWS::RDS::DBInstance
    DependsOn: DBCredentials
    Properties:
      DBInstanceIdentifier: "gremlin-db-instance"
      DBInstanceClass: db.t3.micro
      Engine: mssql
      DBName: !Ref DBName
      MasterUsername: !Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:username}}"
      MasterPassword: !Sub "{{resolve:secretsmanager:/${ProjectName}/DB_CREDENTIALS:SecretString:password}}"
      AllocateStorage: 20
      VPCSecurityGroups:
        - ImportValue RDSSecurityGroupId
      DBSubnetGroupName: !Ref DBSubnetGroup
      MultiAZ: false
      StorageType: gp2
      PublicyAccessible: false
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      SubnetIds:
        - !ImportValue PrivateSubnetAId
        - !ImportValue PrivateSubnetBId
Outputs:
  DBName:
    Value: !Ref DBName
    Export:
      Name: DBName
  DBEndpoint:
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: DBEndpoint
