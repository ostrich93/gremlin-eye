AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  HostedZoneId:
    Type: String
  DomainName:
    Type: String
    Description: The base domain name, e.g. gremlin-eye.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: Must be a valid DNS zone name
    Default: gremlin-eye.com
Resources:
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - '*.gremlin-eye.com' #This is for if/when we add subdomains
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      ValidationMethod: DNS
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId: !ImportValue VpcId
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Type: application
      Name: ALB-ECS-Gremlin-Service
      SecurityGroups:
        - !ImportValue PublicLoadBalancerSGId
      Subnets:
        - !ImportValue PublicSubnetAId
        - !ImportValue PublicSubnetBId

  HttpLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - LoadBalancer
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: '#{host}'
            Path: '/#{path}'
            Query: '#{query}'
            StatusCode: HTTP_302
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  HttpsLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - LoadBalancer
      - SSLCertificate 
    Properties:
      Certificates:
        - CertificateArn: !Ref SSLCertificate
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS

  HttpsLoadBalancerListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: 'forward'
      Conditions:
        - Field: path-pattern
          Values:
            - /api/*
      Priority: 1
      ListenerArn: !Ref HttpsLoadBalancerListener
Outputs:
  TargetGroupArn:
    Value: !Ref TargetGroup
    Export:
      Name: TargetGroupArn
  LoadBalancerArn:
    Value: !Ref LoadBalancer
    Export:
      Name: LoadBalancerArn
  LoadBalancerDNSName:
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: LoadBalancerDNSName
  LoadBalancerCanonicalHostedZoneId:
    Value: !GetAtt LoadBalancer.CanonicalHostedZoneID
    Export:
      Name: LoadBalancerCanonicalHostedZoneId
    