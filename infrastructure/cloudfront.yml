AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  HostedZoneId:
    Type: String
  DomainName:
    Type: String
    Description: The base domain name, e.g. gremlin-eye.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: Must be a valid DNS zone name
    Default: gremlin-eye.com
  SSLCertificateArn: #Obtained from us-east-1
    Type: String
Resources:
  FrontendOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: OAC-GremlinWebsite
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !ImportValue FrontendBucketDomainName
            Id: S3Origin
            OriginAccessControlId: !GetAtt FrontendOAC.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
          - DomainName: !ImportValue LoadBalancerDNSName
            Id: BackendOrigin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: 'https-only'
        Aliases:
          - www.gremlin-eye.com
          - gremlin-eye.com 
        Enabled: true
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 60
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 60
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: "redirect-to-https"
          Compress: false
          ForwardedValues:
            QueryString: false
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
        CacheBehaviors:
          - PathPattern: "/api/*"
            TargetOriginId: BackendOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - POST
              - PATCH
              - DELETE
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
            ForwardedValues:
              QueryString: true
              Headers:
                - Authorization
                - Accept 
                - Content-Type
              Cookies:
                Forward: all
            Compress: false
        DefaultRootObject: 'index.html'
        HttpVersion: http2
        PriceClass: 'PriceClass_100'
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
      Tags:
        - Key: Name
          Value: GremlinEyeCloudFront
  FrontendS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !ImportValue FrontendBucketName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: "AllowCloudFrontAccess"
            Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: !ImportValue FrontendBucketARN
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution.Id}"
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub 'api.${DomainName}'
      Type: "A"
      AliasTarget:
        HostedZoneId: !ImportValue LoadBalancerCanonicalHostedZoneId
        DNSName: !ImportValue LoadBalancerDNSName
        EvaluateTargetHealth: true
      HostedZoneId: !Ref HostedZoneId
  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Sub '${DomainName}.'
          Type: "A"
          AliasTarget:
            DNSName: !GetAtt CloudFrontDistribution.DomainName
            HostedZoneId: Z2FDTNDATAQYW2 #The hosted zone id provided by aws for cloudfront distributions
Outputs:
  CloudFrontDistributionId:
    Value: !Ref CloudFrontDistribution
    Export:
      Name: CloudFrontDistributionId
  CloudFrontDistributionDomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: CloudFrontDistributionDomainName